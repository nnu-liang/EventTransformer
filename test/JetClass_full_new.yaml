selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression


new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   part_mask: ak.ones_like(part_energy)
   part_pt_log: np.log(part_pt)
   part_e_log: np.log(part_energy)
   part_d0: np.tanh(part_d0val)
   part_dz: np.tanh(part_dzval)
   jet_pt_log: np.log(jet_pt)
   jet_energy_log: np.log(jet_energy)
   jet_nparticles_log: np.log(jet_nparticles)
   jet_dR_two_jets: np.hypot(jet_dEta_two_jets, jet_dPhi_two_jets)
   jet_dR_jet_event: np.hypot(jet_dEta_jet_event, jet_dPhi_jet_event)
   part_dR_particle_jet: np.hypot(part_dEta_particle_jet, part_dPhi_particle_jet)
   part_dR_particle_event: np.hypot(part_dEta_particle_event, part_dPhi_particle_event)
   part_logptrel_particle_jet: np.log(part_ptrel_particle_jet)
   part_logerel_particle_jet: np.log(part_erel_particle_jet)
   jet_logerel_jet_event: np.log(jet_erel_jet_event)
   part_logerel_particle_event: np.log(part_erel_particle_event)
   

preprocess:
  ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
  method: manual
  ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
  data_fraction: 0.5

inputs:
   pf_points:
      length: 350
      pad_mode: wrap
      vars:
         - [part_dEta_particle_jet, null]
         - [part_dPhi_particle_jet, null]
   pf_features:
      length: 350
      pad_mode: wrap
      vars: 
      ### [format 1]: var_name (no transformation)
      ### [format 2]: [var_name, 
      ###              subtract_by(optional, default=None, no transf. if preprocess.method=manual, auto transf. if preprocess.method=auto), 
      ###              multiply_by(optional, default=1), 
      ###              clip_min(optional, default=-5), 
      ###              clip_max(optional, default=5), 
      ###              pad_value(optional, default=0)]
         - [part_pt_log, 1.7, 0.7]
         - [part_e_log, 2.0, 0.7]
         - [part_charge, null]
         - [part_isChargedHadron, null]
         - [part_isNeutralHadron, null]
         - [part_isPhoton, null]
         - [part_isElectron, null]
         - [part_isMuon, null]
         - [part_d0, null]
         - [part_d0err, 0, 1, 0, 1]
         - [part_dz, null]
         - [part_dzerr, 0, 1, 0, 1]
         - [part_slimjetid, null]
         - [part_fatjetid, null]
         
         - [jet_pt_log, null]
         - [jet_px, null]
         - [jet_py, null]
         - [jet_pz, null]
         - [jet_energy_log, null]
         - [jet_sdmass, null]
         - [jet_nparticles_log, null]
         - [jet_ncharged, null]
         - [jet_nneutral, null]
         - [jet_neutralEnergyfraction, null]
         - [jet_chargedEnergyfraction, null]
         - [jet_tau1, null]
         - [jet_tau2, null]
         - [jet_tau3, null]
         - [jet_tau4, null]
         - [jet_antikt_dR, null]
         
         - [event_px, null]
         - [event_py, null]
         - [event_pz, null]
         - [event_pt, null]
         - [event_energy, null]
         - [event_nparticles, null]
         - [event_njets, null]
         
         - [jet_dEta_two_jets, null]
         - [jet_dPhi_two_jets, null]
         - [jet_dR_two_jets, null]
         
         - [part_logptrel_particle_jet, null]
         - [part_logerel_particle_jet, null]
         - [part_dEta_particle_jet, null]
         - [part_dPhi_particle_jet, null]
         - [part_dR_particle_jet, null]
         
         - [jet_log_erel_jet_event, null]
         - [jet_dEta_jet_event, null]
         - [jet_dPhi_jet_event, null]
         - [jet_dR_jet_event, null]
         
         - [part_logerel_particle_event, null]
         - [part_dEta_particle_event, null]
         - [part_dPhi_particle_event, null]
         - [part_dR_particle_event, null]
         
         - [jet_ration_nslimjet_nfatjet, null]
         - [jet_ptrel_slimjet_fatjet, null]
         - [jet_dEta_slimjet_fatjet, null]
         - [jet_dPhi_slimjet_fatjet, null]
         - [jet_erel_slimjet_fatjet, null]
                  
   pf_vectors:
      length: 350
      pad_mode: wrap
      vars: 
         - [part_px, null]
         - [part_py, null]
         - [part_pz, null]
         - [part_energy, null]
         
   pf_mask:
      length: 350
      pad_mode: constant
      vars: 
         - [part_mask, null]

labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   type: simple
   value: [label_hh_4b, label_tt_2b4j, label_tth_4b4j, label_ttbb_4b4j, label_hbb_4b, label_4b, label_2b2j, label_zz_4b, label_zh_4b]
   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value: 
   #    truth_label: label.argmax(1)

observers:
   #- jet_pt
   #- jet_eta
   #- jet_phi
   #- jet_energy
   #- jet_nparticles
   #- jet_sdmass
   #- jet_tau1
   #- jet_tau2
   #- jet_tau3
   #- jet_tau4
monitor_variables:

weights:
